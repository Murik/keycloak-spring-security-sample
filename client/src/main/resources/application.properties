logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=INFO
logging.level.org.springframework.boot.autoconfigure=DEBUG
server.port=8080
spring.thymeleaf.cache=false

## built-in support for Google Accounts. Github, Facebook
spring.security.oauth2.client.registration.google.client-id=your-app-client-id
spring.security.oauth2.client.registration.google.client-secret=your-app-client-secret
spring.security.oauth2.client.registration.github.client-id=your-app-client-id
spring.security.oauth2.client.registration.github.client-secret=your-app-client-secret
spring.security.oauth2.client.registration.facebook.client-id=your-app-client-id
spring.security.oauth2.client.registration.facebook.client-secret=your-app-client-secret

# okta
spring.security.oauth2.client.registration.okta.client-id=0oaeszrc1wEt3A0iC0h7
spring.security.oauth2.client.registration.okta.client-secret=lJYdP4VtR7Das3k_hzUOiat-4_SJGGNy-Y-I9Ow7
spring.security.oauth2.client.registration.okta.clientName=Okta
spring.security.oauth2.client.registration.okta.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.okta.redirect-uri=http://localhost:8080/login/oauth2/code/okta
spring.security.oauth2.client.registration.okta.scope=openid, profile, email
spring.security.oauth2.client.provider.okta.authorization-uri=https://dev-727816.oktapreview.com/oauth2/v1/authorize
spring.security.oauth2.client.provider.okta.token-uri=https://dev-727816.oktapreview.com/oauth2/v1/token
spring.security.oauth2.client.provider.okta.user-info-uri=https://dev-727816.oktapreview.com/oauth2/v1/userinfo
spring.security.oauth2.client.provider.okta.jwk-set-uri=https://dev-727816.oktapreview.com/oauth2/v1/keys
spring.security.oauth2.client.provider.okta.user-name-attribute=sub

# keycloak support
spring.security.oauth2.client.registration.keycloak.client-id=demoapp
spring.security.oauth2.client.registration.keycloak.client-secret=demoapp
spring.security.oauth2.client.registration.keycloak.clientName=Keycloak
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8080/login/oauth2/code/keycloak
spring.security.oauth2.client.registration.keycloak.scope=openid, profile, email
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8000/auth/realms/demo/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8000/auth/realms/demo/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8000/auth/realms/demo/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8000/auth/realms/demo/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
